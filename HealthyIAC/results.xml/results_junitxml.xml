<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="46" tests="90" time="0.0">
	<testsuite disabled="0" errors="0" failures="46" name="terraform scan" skipped="0" tests="90" time="0">
		<properties>
			<property name="directory" value="['/app']"/>
			<property name="add_check" value="False"/>
			<property name="list" value="False"/>
			<property name="output" value="['junitxml']"/>
			<property name="output_file_path" value="results.xml"/>
			<property name="output_bc_ids" value="False"/>
			<property name="include_all_checkov_policies" value="True"/>
			<property name="quiet" value="False"/>
			<property name="compact" value="False"/>
			<property name="framework" value="['all']"/>
			<property name="skip_framework" value="[]"/>
			<property name="run_all_external_checks" value="False"/>
			<property name="soft_fail" value="False"/>
			<property name="skip_results_upload" value="False"/>
			<property name="repo_id" value="cli_repo/app"/>
			<property name="branch" value="master"/>
			<property name="skip_download" value="False"/>
			<property name="use_enforcement_rules" value="False"/>
			<property name="external_modules_download_path" value=".external_modules"/>
			<property name="evaluate_variables" value="True"/>
			<property name="no_cert_verify" value="False"/>
			<property name="create_baseline" value="False"/>
			<property name="output_baseline_as_skipped" value="False"/>
			<property name="secrets_scan_file_type" value="[]"/>
			<property name="enable_secret_scan_all_files" value="False"/>
			<property name="block_list_secret_scan" value="[]"/>
			<property name="summary_position" value="top"/>
			<property name="skip_resources_without_violations" value="False"/>
			<property name="deep_analysis" value="False"/>
			<property name="no_fail_on_crash" value="False"/>
			<property name="mask" value="defaultdict(&lt;class 'set'&gt;, {})"/>
			<property name="scan_secrets_history" value="False"/>
			<property name="secrets_history_timeout" value="12h"/>
			<property name="custom_tool_name" value="Checkov"/>
		</properties>
		<testcase name="[NONE][CKV_AWS_328] Ensure that ALB is configured with defensive or strictest desync mitigation mode" classname="/alb.tf.aws_lb.app_lb" file="/alb.tf"/>
		<testcase name="[NONE][CKV_AWS_261] Ensure HTTP HTTPS Target group defines Healthcheck" classname="/alb.tf.aws_lb_target_group.app_tg" file="/alb.tf"/>
		<testcase name="[NONE][CKV_AWS_130] Ensure VPC subnets do not assign public IP by default" classname="/database.tf.aws_subnet.private_subnet_1" file="/database.tf"/>
		<testcase name="[NONE][CKV_AWS_130] Ensure VPC subnets do not assign public IP by default" classname="/database.tf.aws_subnet.private_subnet_2" file="/database.tf"/>
		<testcase name="[NONE][CKV_AWS_250] Ensure that RDS PostgreSQL instances use a non vulnerable version with the log_fdw extension (https://aws.amazon.com/security/security-bulletins/AWS-2022-004/)" classname="/database.tf.aws_db_instance.healthy" file="/database.tf"/>
		<testcase name="[NONE][CKV_AWS_354] Ensure RDS Performance Insights are encrypted using KMS CMKs" classname="/database.tf.aws_db_instance.healthy" file="/database.tf"/>
		<testcase name="[NONE][CKV_AWS_211] Ensure RDS uses a modern CaCert" classname="/database.tf.aws_db_instance.healthy" file="/database.tf"/>
		<testcase name="[NONE][CKV_AWS_133] Ensure that RDS instances has backup policy" classname="/database.tf.aws_db_instance.healthy" file="/database.tf"/>
		<testcase name="[NONE][CKV_AWS_388] Ensure AWS Aurora PostgreSQL is not exposed to local file read vulnerability" classname="/database.tf.aws_db_instance.healthy" file="/database.tf"/>
		<testcase name="[NONE][CKV_AWS_17] Ensure all data stored in RDS is not publicly accessible" classname="/database.tf.aws_db_instance.healthy" file="/database.tf"/>
		<testcase name="[NONE][CKV_AWS_46] Ensure no hard-coded secrets exist in EC2 user data" classname="/ec2.tf.aws_instance.backend" file="/ec2.tf"/>
		<testcase name="[NONE][CKV_AWS_274] Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy" classname="/iam.tf.aws_iam_role.ec2_s3_read_role" file="/iam.tf"/>
		<testcase name="[NONE][CKV_AWS_61] Ensure AWS IAM policy does not allow assume role permission across all services" classname="/iam.tf.aws_iam_role.ec2_s3_read_role" file="/iam.tf"/>
		<testcase name="[NONE][CKV_AWS_60] Ensure IAM role allows only specific services or principals to assume it" classname="/iam.tf.aws_iam_role.ec2_s3_read_role" file="/iam.tf"/>
		<testcase name="[NONE][CKV_AWS_274] Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy" classname="/iam.tf.aws_iam_policy_attachment.s3_read_attach" file="/iam.tf"/>
		<testcase name="[NONE][CKV_AWS_40] Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)" classname="/iam.tf.aws_iam_policy_attachment.s3_read_attach" file="/iam.tf"/>
		<testcase name="[NONE][CKV_AWS_41] Ensure no hard coded AWS access key and secret key exists in provider" classname="/main.tf.aws.default" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_93] Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)" classname="/s3.tf.aws_s3_bucket.healthy_app_files" file="/s3.tf"/>
		<testcase name="[NONE][CKV_AWS_93] Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)" classname="/s3.tf.aws_s3_bucket_policy.public_read_policy" file="/s3.tf"/>
		<testcase name="[NONE][CKV_AWS_24] Ensure no security groups allow ingress from 0.0.0.0:0 to port 22" classname="/securitygroup.tf.aws_security_group.rds_sg" file="/securitygroup.tf"/>
		<testcase name="[NONE][CKV_AWS_260] Ensure no security groups allow ingress from 0.0.0.0:0 to port 80" classname="/securitygroup.tf.aws_security_group.rds_sg" file="/securitygroup.tf"/>
		<testcase name="[NONE][CKV_AWS_277] Ensure no security groups allow ingress from 0.0.0.0:0 to port -1" classname="/securitygroup.tf.aws_security_group.rds_sg" file="/securitygroup.tf"/>
		<testcase name="[NONE][CKV_AWS_25] Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389" classname="/securitygroup.tf.aws_security_group.rds_sg" file="/securitygroup.tf"/>
		<testcase name="[NONE][CKV_AWS_277] Ensure no security groups allow ingress from 0.0.0.0:0 to port -1" classname="/securitygroup.tf.aws_security_group.ec2_sg" file="/securitygroup.tf"/>
		<testcase name="[NONE][CKV_AWS_25] Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389" classname="/securitygroup.tf.aws_security_group.ec2_sg" file="/securitygroup.tf"/>
		<testcase name="[NONE][CKV_AWS_24] Ensure no security groups allow ingress from 0.0.0.0:0 to port 22" classname="/securitygroup.tf.aws_security_group.alb_sg" file="/securitygroup.tf"/>
		<testcase name="[NONE][CKV_AWS_277] Ensure no security groups allow ingress from 0.0.0.0:0 to port -1" classname="/securitygroup.tf.aws_security_group.alb_sg" file="/securitygroup.tf"/>
		<testcase name="[NONE][CKV_AWS_25] Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389" classname="/securitygroup.tf.aws_security_group.alb_sg" file="/securitygroup.tf"/>
		<testcase name="[NONE][CKV_AWS_130] Ensure VPC subnets do not assign public IP by default" classname="/vpc.tf.aws_subnet.main_subnet_1" file="/vpc.tf"/>
		<testcase name="[NONE][CKV_AWS_130] Ensure VPC subnets do not assign public IP by default" classname="/vpc.tf.aws_subnet.main_subnet_2" file="/vpc.tf"/>
		<testcase name="[NONE][CKV2_AWS_69] Ensure AWS RDS database instance configured with encryption in transit" classname="/database.tf.aws_db_instance.healthy" file="/database.tf"/>
		<testcase name="[NONE][CKV2_AWS_5] Ensure that Security Groups are attached to another resource" classname="/securitygroup.tf.aws_security_group.alb_sg" file="/securitygroup.tf"/>
		<testcase name="[NONE][CKV2_AWS_5] Ensure that Security Groups are attached to another resource" classname="/securitygroup.tf.aws_security_group.rds_sg" file="/securitygroup.tf"/>
		<testcase name="[NONE][CKV2_AWS_5] Ensure that Security Groups are attached to another resource" classname="/securitygroup.tf.aws_security_group.ec2_sg" file="/securitygroup.tf"/>
		<testcase name="[NONE][CKV2_AWS_56] Ensure AWS Managed IAMFullAccess IAM policy is not used." classname="/iam.tf.aws_iam_role.ec2_s3_read_role" file="/iam.tf"/>
		<testcase name="[NONE][CKV2_AWS_56] Ensure AWS Managed IAMFullAccess IAM policy is not used." classname="/iam.tf.aws_iam_policy_attachment.s3_read_attach" file="/iam.tf"/>
		<testcase name="[NONE][CKV2_AWS_74] Ensure AWS Load Balancers use strong ciphers" classname="/alb.tf.aws_lb_listener.front_end" file="/alb.tf"/>
		<testcase name="[NONE][CKV2_AWS_41] Ensure an IAM role is attached to EC2 instance" classname="/ec2.tf.aws_instance.backend" file="/ec2.tf"/>
		<testcase name="[NONE][CKV2_AWS_44] Ensure AWS route table with VPC peering does not contain routes overly permissive to all traffic" classname="/vpc.tf.aws_route_table.public_rt" file="/vpc.tf"/>
		<testcase name="[NONE][CKV2_AWS_76] Ensure AWS ALB attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability" classname="/alb.tf.aws_lb.app_lb" file="/alb.tf"/>
		<testcase name="[NONE][CKV2_AWS_35] AWS NAT Gateways should be utilized for the default route" classname="/vpc.tf.aws_route_table.public_rt" file="/vpc.tf"/>
		<testcase name="[NONE][CKV_AWS_57] S3 Bucket has an ACL defined which allows public WRITE access." classname="/s3.tf.aws_s3_bucket.healthy_app_files" file="/s3.tf"/>
		<testcase name="[NONE][CKV_AWS_19] Ensure all data stored in the S3 bucket is securely encrypted at rest" classname="/s3.tf.aws_s3_bucket.healthy_app_files" file="/s3.tf"/>
		<testcase name="[NONE][CKV_AWS_20] S3 Bucket has an ACL defined which allows public READ access." classname="/s3.tf.aws_s3_bucket.healthy_app_files" file="/s3.tf"/>
		<testcase name="[NONE][CKV_AWS_91] Ensure the ELBv2 (Application/Network) has access logging enabled" classname="/alb.tf.aws_lb.app_lb" file="/alb.tf">
			<failure type="failure" message="Ensure the ELBv2 (Application/Network) has access logging enabled">
Resource: aws_lb.app_lb
File: /alb.tf: 2-12
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-logging-22

		2  | resource &quot;aws_lb&quot; &quot;app_lb&quot; {
		3  |   name               = &quot;healthy-alb&quot;
		4  |   internal           = false
		5  |   load_balancer_type = &quot;application&quot;
		6  |   security_groups    = [aws_security_group.alb_sg.id]
		7  |   subnets            = [aws_subnet.main_subnet_1.id, aws_subnet.main_subnet_2.id]
		8  | 
		9  |   tags = {
		10 |     Name = &quot;healthy-application-lb&quot;
		11 |   }
		12 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_131] Ensure that ALB drops HTTP headers" classname="/alb.tf.aws_lb.app_lb" file="/alb.tf">
			<failure type="failure" message="Ensure that ALB drops HTTP headers">
Resource: aws_lb.app_lb
File: /alb.tf: 2-12
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-alb-drops-http-headers

		2  | resource &quot;aws_lb&quot; &quot;app_lb&quot; {
		3  |   name               = &quot;healthy-alb&quot;
		4  |   internal           = false
		5  |   load_balancer_type = &quot;application&quot;
		6  |   security_groups    = [aws_security_group.alb_sg.id]
		7  |   subnets            = [aws_subnet.main_subnet_1.id, aws_subnet.main_subnet_2.id]
		8  | 
		9  |   tags = {
		10 |     Name = &quot;healthy-application-lb&quot;
		11 |   }
		12 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_150] Ensure that Load Balancer has deletion protection enabled" classname="/alb.tf.aws_lb.app_lb" file="/alb.tf">
			<failure type="failure" message="Ensure that Load Balancer has deletion protection enabled">
Resource: aws_lb.app_lb
File: /alb.tf: 2-12
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-150

		2  | resource &quot;aws_lb&quot; &quot;app_lb&quot; {
		3  |   name               = &quot;healthy-alb&quot;
		4  |   internal           = false
		5  |   load_balancer_type = &quot;application&quot;
		6  |   security_groups    = [aws_security_group.alb_sg.id]
		7  |   subnets            = [aws_subnet.main_subnet_1.id, aws_subnet.main_subnet_2.id]
		8  | 
		9  |   tags = {
		10 |     Name = &quot;healthy-application-lb&quot;
		11 |   }
		12 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_2] Ensure ALB protocol is HTTPS" classname="/alb.tf.aws_lb_listener.front_end" file="/alb.tf">
			<failure type="failure" message="Ensure ALB protocol is HTTPS">
Resource: aws_lb_listener.front_end
File: /alb.tf: 35-44
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-29

		35 | resource &quot;aws_lb_listener&quot; &quot;front_end&quot; {
		36 |   load_balancer_arn = aws_lb.app_lb.arn
		37 |   port              = &quot;80&quot;
		38 |   protocol          = &quot;HTTP&quot;
		39 | 
		40 |   default_action {
		41 |     type             = &quot;forward&quot;
		42 |     target_group_arn = aws_lb_target_group.app_tg.arn
		43 |   }
		44 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_157] Ensure that RDS instances have Multi-AZ enabled" classname="/database.tf.aws_db_instance.healthy" file="/database.tf">
			<failure type="failure" message="Ensure that RDS instances have Multi-AZ enabled">
Resource: aws_db_instance.healthy
File: /database.tf: 36-49
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-73

		36 | resource &quot;aws_db_instance&quot; &quot;healthy&quot; {
		37 |   identifier             = &quot;healthy-db&quot;
		38 |   allocated_storage      = var.db_allocated_storage
		39 |   engine                 = &quot;postgres&quot;
		40 |   engine_version         = &quot;15.7&quot;
		41 |   instance_class         = var.db_instance_class
		42 |   db_name                = var.db_name
		43 |   username               = var.db_username
		44 |   password               = var.db_password
		45 |   publicly_accessible    = false  # Para que no sea accesible públicamente
		46 |   skip_final_snapshot    = true
		47 |   vpc_security_group_ids = [aws_security_group.rds_sg.id]
		48 |   db_subnet_group_name   = aws_db_subnet_group.main.name
		49 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_129] Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled" classname="/database.tf.aws_db_instance.healthy" file="/database.tf">
			<failure type="failure" message="Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled">
Resource: aws_db_instance.healthy
File: /database.tf: 36-49
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled

		36 | resource &quot;aws_db_instance&quot; &quot;healthy&quot; {
		37 |   identifier             = &quot;healthy-db&quot;
		38 |   allocated_storage      = var.db_allocated_storage
		39 |   engine                 = &quot;postgres&quot;
		40 |   engine_version         = &quot;15.7&quot;
		41 |   instance_class         = var.db_instance_class
		42 |   db_name                = var.db_name
		43 |   username               = var.db_username
		44 |   password               = var.db_password
		45 |   publicly_accessible    = false  # Para que no sea accesible públicamente
		46 |   skip_final_snapshot    = true
		47 |   vpc_security_group_ids = [aws_security_group.rds_sg.id]
		48 |   db_subnet_group_name   = aws_db_subnet_group.main.name
		49 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_161] Ensure RDS database has IAM authentication enabled" classname="/database.tf.aws_db_instance.healthy" file="/database.tf">
			<failure type="failure" message="Ensure RDS database has IAM authentication enabled">
Resource: aws_db_instance.healthy
File: /database.tf: 36-49
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-rds-database-has-iam-authentication-enabled

		36 | resource &quot;aws_db_instance&quot; &quot;healthy&quot; {
		37 |   identifier             = &quot;healthy-db&quot;
		38 |   allocated_storage      = var.db_allocated_storage
		39 |   engine                 = &quot;postgres&quot;
		40 |   engine_version         = &quot;15.7&quot;
		41 |   instance_class         = var.db_instance_class
		42 |   db_name                = var.db_name
		43 |   username               = var.db_username
		44 |   password               = var.db_password
		45 |   publicly_accessible    = false  # Para que no sea accesible públicamente
		46 |   skip_final_snapshot    = true
		47 |   vpc_security_group_ids = [aws_security_group.rds_sg.id]
		48 |   db_subnet_group_name   = aws_db_subnet_group.main.name
		49 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_118] Ensure that enhanced monitoring is enabled for Amazon RDS instances" classname="/database.tf.aws_db_instance.healthy" file="/database.tf">
			<failure type="failure" message="Ensure that enhanced monitoring is enabled for Amazon RDS instances">
Resource: aws_db_instance.healthy
File: /database.tf: 36-49
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances

		36 | resource &quot;aws_db_instance&quot; &quot;healthy&quot; {
		37 |   identifier             = &quot;healthy-db&quot;
		38 |   allocated_storage      = var.db_allocated_storage
		39 |   engine                 = &quot;postgres&quot;
		40 |   engine_version         = &quot;15.7&quot;
		41 |   instance_class         = var.db_instance_class
		42 |   db_name                = var.db_name
		43 |   username               = var.db_username
		44 |   password               = var.db_password
		45 |   publicly_accessible    = false  # Para que no sea accesible públicamente
		46 |   skip_final_snapshot    = true
		47 |   vpc_security_group_ids = [aws_security_group.rds_sg.id]
		48 |   db_subnet_group_name   = aws_db_subnet_group.main.name
		49 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_353] Ensure that RDS instances have performance insights enabled" classname="/database.tf.aws_db_instance.healthy" file="/database.tf">
			<failure type="failure" message="Ensure that RDS instances have performance insights enabled">
Resource: aws_db_instance.healthy
File: /database.tf: 36-49
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-353

		36 | resource &quot;aws_db_instance&quot; &quot;healthy&quot; {
		37 |   identifier             = &quot;healthy-db&quot;
		38 |   allocated_storage      = var.db_allocated_storage
		39 |   engine                 = &quot;postgres&quot;
		40 |   engine_version         = &quot;15.7&quot;
		41 |   instance_class         = var.db_instance_class
		42 |   db_name                = var.db_name
		43 |   username               = var.db_username
		44 |   password               = var.db_password
		45 |   publicly_accessible    = false  # Para que no sea accesible públicamente
		46 |   skip_final_snapshot    = true
		47 |   vpc_security_group_ids = [aws_security_group.rds_sg.id]
		48 |   db_subnet_group_name   = aws_db_subnet_group.main.name
		49 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_293] Ensure that AWS database instances have deletion protection enabled" classname="/database.tf.aws_db_instance.healthy" file="/database.tf">
			<failure type="failure" message="Ensure that AWS database instances have deletion protection enabled">
Resource: aws_db_instance.healthy
File: /database.tf: 36-49
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-293

		36 | resource &quot;aws_db_instance&quot; &quot;healthy&quot; {
		37 |   identifier             = &quot;healthy-db&quot;
		38 |   allocated_storage      = var.db_allocated_storage
		39 |   engine                 = &quot;postgres&quot;
		40 |   engine_version         = &quot;15.7&quot;
		41 |   instance_class         = var.db_instance_class
		42 |   db_name                = var.db_name
		43 |   username               = var.db_username
		44 |   password               = var.db_password
		45 |   publicly_accessible    = false  # Para que no sea accesible públicamente
		46 |   skip_final_snapshot    = true
		47 |   vpc_security_group_ids = [aws_security_group.rds_sg.id]
		48 |   db_subnet_group_name   = aws_db_subnet_group.main.name
		49 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_16] Ensure all data stored in the RDS is securely encrypted at rest" classname="/database.tf.aws_db_instance.healthy" file="/database.tf">
			<failure type="failure" message="Ensure all data stored in the RDS is securely encrypted at rest">
Resource: aws_db_instance.healthy
File: /database.tf: 36-49
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-4

		36 | resource &quot;aws_db_instance&quot; &quot;healthy&quot; {
		37 |   identifier             = &quot;healthy-db&quot;
		38 |   allocated_storage      = var.db_allocated_storage
		39 |   engine                 = &quot;postgres&quot;
		40 |   engine_version         = &quot;15.7&quot;
		41 |   instance_class         = var.db_instance_class
		42 |   db_name                = var.db_name
		43 |   username               = var.db_username
		44 |   password               = var.db_password
		45 |   publicly_accessible    = false  # Para que no sea accesible públicamente
		46 |   skip_final_snapshot    = true
		47 |   vpc_security_group_ids = [aws_security_group.rds_sg.id]
		48 |   db_subnet_group_name   = aws_db_subnet_group.main.name
		49 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_226] Ensure DB instance gets all minor upgrades automatically" classname="/database.tf.aws_db_instance.healthy" file="/database.tf">
			<failure type="failure" message="Ensure DB instance gets all minor upgrades automatically">
Resource: aws_db_instance.healthy
File: /database.tf: 36-49
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-db-instance-gets-all-minor-upgrades-automatically

		36 | resource &quot;aws_db_instance&quot; &quot;healthy&quot; {
		37 |   identifier             = &quot;healthy-db&quot;
		38 |   allocated_storage      = var.db_allocated_storage
		39 |   engine                 = &quot;postgres&quot;
		40 |   engine_version         = &quot;15.7&quot;
		41 |   instance_class         = var.db_instance_class
		42 |   db_name                = var.db_name
		43 |   username               = var.db_username
		44 |   password               = var.db_password
		45 |   publicly_accessible    = false  # Para que no sea accesible públicamente
		46 |   skip_final_snapshot    = true
		47 |   vpc_security_group_ids = [aws_security_group.rds_sg.id]
		48 |   db_subnet_group_name   = aws_db_subnet_group.main.name
		49 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_88] EC2 instance should not have public IP." classname="/ec2.tf.aws_instance.backend" file="/ec2.tf">
			<failure type="failure" message="EC2 instance should not have public IP.">
Resource: aws_instance.backend
File: /ec2.tf: 1-16
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-12

		1  | resource &quot;aws_instance&quot; &quot;backend&quot; {
		2  |   ami                    = var.ec2_ami
		3  |   instance_type          = var.ec2_instance_type
		4  |   key_name               = var.key_pair_name
		5  |   subnet_id              = aws_subnet.main_subnet_1.id
		6  |   vpc_security_group_ids = [aws_security_group.ec2_sg.id]
		7  |   iam_instance_profile = aws_iam_instance_profile.ec2_profile.name
		8  | 
		9  | 
		10 |   associate_public_ip_address = true  
		11 |   tags = {
		12 |     Name = &quot;backend-ec2-instance&quot;
		13 |   }
		14 | 
		15 |    user_data = file(&quot;setup_backend.sh&quot;)
		16 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_79] Ensure Instance Metadata Service Version 1 is not enabled" classname="/ec2.tf.aws_instance.backend" file="/ec2.tf">
			<failure type="failure" message="Ensure Instance Metadata Service Version 1 is not enabled">
Resource: aws_instance.backend
File: /ec2.tf: 1-16
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-31

		1  | resource &quot;aws_instance&quot; &quot;backend&quot; {
		2  |   ami                    = var.ec2_ami
		3  |   instance_type          = var.ec2_instance_type
		4  |   key_name               = var.key_pair_name
		5  |   subnet_id              = aws_subnet.main_subnet_1.id
		6  |   vpc_security_group_ids = [aws_security_group.ec2_sg.id]
		7  |   iam_instance_profile = aws_iam_instance_profile.ec2_profile.name
		8  | 
		9  | 
		10 |   associate_public_ip_address = true  
		11 |   tags = {
		12 |     Name = &quot;backend-ec2-instance&quot;
		13 |   }
		14 | 
		15 |    user_data = file(&quot;setup_backend.sh&quot;)
		16 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_126] Ensure that detailed monitoring is enabled for EC2 instances" classname="/ec2.tf.aws_instance.backend" file="/ec2.tf">
			<failure type="failure" message="Ensure that detailed monitoring is enabled for EC2 instances">
Resource: aws_instance.backend
File: /ec2.tf: 1-16
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances

		1  | resource &quot;aws_instance&quot; &quot;backend&quot; {
		2  |   ami                    = var.ec2_ami
		3  |   instance_type          = var.ec2_instance_type
		4  |   key_name               = var.key_pair_name
		5  |   subnet_id              = aws_subnet.main_subnet_1.id
		6  |   vpc_security_group_ids = [aws_security_group.ec2_sg.id]
		7  |   iam_instance_profile = aws_iam_instance_profile.ec2_profile.name
		8  | 
		9  | 
		10 |   associate_public_ip_address = true  
		11 |   tags = {
		12 |     Name = &quot;backend-ec2-instance&quot;
		13 |   }
		14 | 
		15 |    user_data = file(&quot;setup_backend.sh&quot;)
		16 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_135] Ensure that EC2 is EBS optimized" classname="/ec2.tf.aws_instance.backend" file="/ec2.tf">
			<failure type="failure" message="Ensure that EC2 is EBS optimized">
Resource: aws_instance.backend
File: /ec2.tf: 1-16
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-ec2-is-ebs-optimized

		1  | resource &quot;aws_instance&quot; &quot;backend&quot; {
		2  |   ami                    = var.ec2_ami
		3  |   instance_type          = var.ec2_instance_type
		4  |   key_name               = var.key_pair_name
		5  |   subnet_id              = aws_subnet.main_subnet_1.id
		6  |   vpc_security_group_ids = [aws_security_group.ec2_sg.id]
		7  |   iam_instance_profile = aws_iam_instance_profile.ec2_profile.name
		8  | 
		9  | 
		10 |   associate_public_ip_address = true  
		11 |   tags = {
		12 |     Name = &quot;backend-ec2-instance&quot;
		13 |   }
		14 | 
		15 |    user_data = file(&quot;setup_backend.sh&quot;)
		16 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_8] Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted" classname="/ec2.tf.aws_instance.backend" file="/ec2.tf">
			<failure type="failure" message="Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted">
Resource: aws_instance.backend
File: /ec2.tf: 1-16
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-13

		1  | resource &quot;aws_instance&quot; &quot;backend&quot; {
		2  |   ami                    = var.ec2_ami
		3  |   instance_type          = var.ec2_instance_type
		4  |   key_name               = var.key_pair_name
		5  |   subnet_id              = aws_subnet.main_subnet_1.id
		6  |   vpc_security_group_ids = [aws_security_group.ec2_sg.id]
		7  |   iam_instance_profile = aws_iam_instance_profile.ec2_profile.name
		8  | 
		9  | 
		10 |   associate_public_ip_address = true  
		11 |   tags = {
		12 |     Name = &quot;backend-ec2-instance&quot;
		13 |   }
		14 | 
		15 |    user_data = file(&quot;setup_backend.sh&quot;)
		16 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_56] Ensure S3 bucket has 'restrict_public_buckets' enabled" classname="/s3.tf.aws_s3_bucket_public_access_block.public_access" file="/s3.tf">
			<failure type="failure" message="Ensure S3 bucket has 'restrict_public_buckets' enabled">
Resource: aws_s3_bucket_public_access_block.public_access
File: /s3.tf: 17-24
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-22

		17 | resource &quot;aws_s3_bucket_public_access_block&quot; &quot;public_access&quot; {
		18 |   bucket = aws_s3_bucket.healthy_app_files.id
		19 | 
		20 |   block_public_acls       = false
		21 |   block_public_policy     = false
		22 |   ignore_public_acls      = false
		23 |   restrict_public_buckets = false
		24 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_54] Ensure S3 bucket has block public policy enabled" classname="/s3.tf.aws_s3_bucket_public_access_block.public_access" file="/s3.tf">
			<failure type="failure" message="Ensure S3 bucket has block public policy enabled">
Resource: aws_s3_bucket_public_access_block.public_access
File: /s3.tf: 17-24
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-20

		17 | resource &quot;aws_s3_bucket_public_access_block&quot; &quot;public_access&quot; {
		18 |   bucket = aws_s3_bucket.healthy_app_files.id
		19 | 
		20 |   block_public_acls       = false
		21 |   block_public_policy     = false
		22 |   ignore_public_acls      = false
		23 |   restrict_public_buckets = false
		24 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_53] Ensure S3 bucket has block public ACLS enabled" classname="/s3.tf.aws_s3_bucket_public_access_block.public_access" file="/s3.tf">
			<failure type="failure" message="Ensure S3 bucket has block public ACLS enabled">
Resource: aws_s3_bucket_public_access_block.public_access
File: /s3.tf: 17-24
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-19

		17 | resource &quot;aws_s3_bucket_public_access_block&quot; &quot;public_access&quot; {
		18 |   bucket = aws_s3_bucket.healthy_app_files.id
		19 | 
		20 |   block_public_acls       = false
		21 |   block_public_policy     = false
		22 |   ignore_public_acls      = false
		23 |   restrict_public_buckets = false
		24 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_55] Ensure S3 bucket has ignore public ACLs enabled" classname="/s3.tf.aws_s3_bucket_public_access_block.public_access" file="/s3.tf">
			<failure type="failure" message="Ensure S3 bucket has ignore public ACLs enabled">
Resource: aws_s3_bucket_public_access_block.public_access
File: /s3.tf: 17-24
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-21

		17 | resource &quot;aws_s3_bucket_public_access_block&quot; &quot;public_access&quot; {
		18 |   bucket = aws_s3_bucket.healthy_app_files.id
		19 | 
		20 |   block_public_acls       = false
		21 |   block_public_policy     = false
		22 |   ignore_public_acls      = false
		23 |   restrict_public_buckets = false
		24 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_70] Ensure S3 bucket does not allow an action with any Principal" classname="/s3.tf.aws_s3_bucket_policy.public_read_policy" file="/s3.tf">
			<failure type="failure" message="Ensure S3 bucket does not allow an action with any Principal">
Resource: aws_s3_bucket_policy.public_read_policy
File: /s3.tf: 26-43
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-23

		26 | resource &quot;aws_s3_bucket_policy&quot; &quot;public_read_policy&quot; {
		27 |   bucket = aws_s3_bucket.healthy_app_files.id
		28 | 
		29 |   policy = jsonencode({
		30 |     Version = &quot;2012-10-17&quot;,
		31 |     Statement = [
		32 |       {
		33 |         Sid       = &quot;PublicReadGetObject&quot;,
		34 |         Effect    = &quot;Allow&quot;,
		35 |         Principal = &quot;*&quot;,
		36 |         Action    = &quot;s3:GetObject&quot;,
		37 |         Resource  = &quot;${aws_s3_bucket.healthy_app_files.arn}/*&quot;
		38 |       }
		39 |     ]
		40 |   })
		41 | 
		42 |   depends_on = [aws_s3_bucket_public_access_block.public_access]
		43 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_23] Ensure every security group and rule has a description" classname="/securitygroup.tf.aws_security_group.rds_sg" file="/securitygroup.tf">
			<failure type="failure" message="Ensure every security group and rule has a description">
Resource: aws_security_group.rds_sg
File: /securitygroup.tf: 2-25
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31

		2  | resource &quot;aws_security_group&quot; &quot;rds_sg&quot; {
		3  |   name        = &quot;rds-security-group&quot;
		4  |   description = &quot;Permite acceso al puerto 5432 para PostgreSQL&quot;
		5  |   vpc_id      = aws_vpc.main.id
		6  | 
		7  |   ingress {
		8  |     from_port   = 5432
		9  |     to_port     = 5432
		10 |     protocol    = &quot;tcp&quot;
		11 |     # Aquí permitimos acceso solo desde EC2 (seguro)
		12 |     security_groups = [aws_security_group.ec2_sg.id]
		13 |   }
		14 | 
		15 |   egress {
		16 |     from_port   = 0
		17 |     to_port     = 0
		18 |     protocol    = &quot;-1&quot;
		19 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		20 |   }
		21 | 
		22 |   tags = {
		23 |     Name = &quot;rds-security-group&quot;
		24 |   }
		25 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_382] Ensure no security groups allow egress from 0.0.0.0:0 to port -1" classname="/securitygroup.tf.aws_security_group.rds_sg" file="/securitygroup.tf">
			<failure type="failure" message="Ensure no security groups allow egress from 0.0.0.0:0 to port -1">
Resource: aws_security_group.rds_sg
File: /securitygroup.tf: 2-25
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		2  | resource &quot;aws_security_group&quot; &quot;rds_sg&quot; {
		3  |   name        = &quot;rds-security-group&quot;
		4  |   description = &quot;Permite acceso al puerto 5432 para PostgreSQL&quot;
		5  |   vpc_id      = aws_vpc.main.id
		6  | 
		7  |   ingress {
		8  |     from_port   = 5432
		9  |     to_port     = 5432
		10 |     protocol    = &quot;tcp&quot;
		11 |     # Aquí permitimos acceso solo desde EC2 (seguro)
		12 |     security_groups = [aws_security_group.ec2_sg.id]
		13 |   }
		14 | 
		15 |   egress {
		16 |     from_port   = 0
		17 |     to_port     = 0
		18 |     protocol    = &quot;-1&quot;
		19 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		20 |   }
		21 | 
		22 |   tags = {
		23 |     Name = &quot;rds-security-group&quot;
		24 |   }
		25 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_24] Ensure no security groups allow ingress from 0.0.0.0:0 to port 22" classname="/securitygroup.tf.aws_security_group.ec2_sg" file="/securitygroup.tf">
			<failure type="failure" message="Ensure no security groups allow ingress from 0.0.0.0:0 to port 22">
Resource: aws_security_group.ec2_sg
File: /securitygroup.tf: 28-72
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security

		28 | resource &quot;aws_security_group&quot; &quot;ec2_sg&quot; {
		29 |   name        = &quot;ec2-security-group&quot;
		30 |   description = &quot;Permite acceso SSH y trafico HTTP HTTPS&quot;
		31 |   vpc_id      = aws_vpc.main.id
		32 | 
		33 |   ingress {
		34 |     from_port   = 22
		35 |     to_port     = 22
		36 |     protocol    = &quot;tcp&quot;
		37 |     cidr_blocks = [var.my_ip]
		38 |   }
		39 | 
		40 |   ingress {
		41 |     from_port   = 80
		42 |     to_port     = 80
		43 |     protocol    = &quot;tcp&quot;
		44 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		45 |   }
		46 | 
		47 |   ingress {
		48 |     from_port   = 443
		49 |     to_port     = 443
		50 |     protocol    = &quot;tcp&quot;
		51 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		52 |   }
		53 | 
		54 |   ingress {
		55 |   description     = &quot;Traffic from ALB&quot;
		56 |   from_port       = 8080
		57 |   to_port         = 8080
		58 |   protocol        = &quot;tcp&quot;
		59 |   security_groups = [aws_security_group.alb_sg.id]
		60 |   }
		61 | 
		62 |   egress {
		63 |     from_port   = 0
		64 |     to_port     = 0
		65 |     protocol    = &quot;-1&quot;
		66 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		67 |   }
		68 | 
		69 |   tags = {
		70 |     Name = &quot;ec2-security-group&quot;
		71 |   }
		72 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_260] Ensure no security groups allow ingress from 0.0.0.0:0 to port 80" classname="/securitygroup.tf.aws_security_group.ec2_sg" file="/securitygroup.tf">
			<failure type="failure" message="Ensure no security groups allow ingress from 0.0.0.0:0 to port 80">
Resource: aws_security_group.ec2_sg
File: /securitygroup.tf: 28-72
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80

		28 | resource &quot;aws_security_group&quot; &quot;ec2_sg&quot; {
		29 |   name        = &quot;ec2-security-group&quot;
		30 |   description = &quot;Permite acceso SSH y trafico HTTP HTTPS&quot;
		31 |   vpc_id      = aws_vpc.main.id
		32 | 
		33 |   ingress {
		34 |     from_port   = 22
		35 |     to_port     = 22
		36 |     protocol    = &quot;tcp&quot;
		37 |     cidr_blocks = [var.my_ip]
		38 |   }
		39 | 
		40 |   ingress {
		41 |     from_port   = 80
		42 |     to_port     = 80
		43 |     protocol    = &quot;tcp&quot;
		44 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		45 |   }
		46 | 
		47 |   ingress {
		48 |     from_port   = 443
		49 |     to_port     = 443
		50 |     protocol    = &quot;tcp&quot;
		51 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		52 |   }
		53 | 
		54 |   ingress {
		55 |   description     = &quot;Traffic from ALB&quot;
		56 |   from_port       = 8080
		57 |   to_port         = 8080
		58 |   protocol        = &quot;tcp&quot;
		59 |   security_groups = [aws_security_group.alb_sg.id]
		60 |   }
		61 | 
		62 |   egress {
		63 |     from_port   = 0
		64 |     to_port     = 0
		65 |     protocol    = &quot;-1&quot;
		66 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		67 |   }
		68 | 
		69 |   tags = {
		70 |     Name = &quot;ec2-security-group&quot;
		71 |   }
		72 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_23] Ensure every security group and rule has a description" classname="/securitygroup.tf.aws_security_group.ec2_sg" file="/securitygroup.tf">
			<failure type="failure" message="Ensure every security group and rule has a description">
Resource: aws_security_group.ec2_sg
File: /securitygroup.tf: 28-72
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31

		28 | resource &quot;aws_security_group&quot; &quot;ec2_sg&quot; {
		29 |   name        = &quot;ec2-security-group&quot;
		30 |   description = &quot;Permite acceso SSH y trafico HTTP HTTPS&quot;
		31 |   vpc_id      = aws_vpc.main.id
		32 | 
		33 |   ingress {
		34 |     from_port   = 22
		35 |     to_port     = 22
		36 |     protocol    = &quot;tcp&quot;
		37 |     cidr_blocks = [var.my_ip]
		38 |   }
		39 | 
		40 |   ingress {
		41 |     from_port   = 80
		42 |     to_port     = 80
		43 |     protocol    = &quot;tcp&quot;
		44 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		45 |   }
		46 | 
		47 |   ingress {
		48 |     from_port   = 443
		49 |     to_port     = 443
		50 |     protocol    = &quot;tcp&quot;
		51 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		52 |   }
		53 | 
		54 |   ingress {
		55 |   description     = &quot;Traffic from ALB&quot;
		56 |   from_port       = 8080
		57 |   to_port         = 8080
		58 |   protocol        = &quot;tcp&quot;
		59 |   security_groups = [aws_security_group.alb_sg.id]
		60 |   }
		61 | 
		62 |   egress {
		63 |     from_port   = 0
		64 |     to_port     = 0
		65 |     protocol    = &quot;-1&quot;
		66 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		67 |   }
		68 | 
		69 |   tags = {
		70 |     Name = &quot;ec2-security-group&quot;
		71 |   }
		72 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_382] Ensure no security groups allow egress from 0.0.0.0:0 to port -1" classname="/securitygroup.tf.aws_security_group.ec2_sg" file="/securitygroup.tf">
			<failure type="failure" message="Ensure no security groups allow egress from 0.0.0.0:0 to port -1">
Resource: aws_security_group.ec2_sg
File: /securitygroup.tf: 28-72
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		28 | resource &quot;aws_security_group&quot; &quot;ec2_sg&quot; {
		29 |   name        = &quot;ec2-security-group&quot;
		30 |   description = &quot;Permite acceso SSH y trafico HTTP HTTPS&quot;
		31 |   vpc_id      = aws_vpc.main.id
		32 | 
		33 |   ingress {
		34 |     from_port   = 22
		35 |     to_port     = 22
		36 |     protocol    = &quot;tcp&quot;
		37 |     cidr_blocks = [var.my_ip]
		38 |   }
		39 | 
		40 |   ingress {
		41 |     from_port   = 80
		42 |     to_port     = 80
		43 |     protocol    = &quot;tcp&quot;
		44 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		45 |   }
		46 | 
		47 |   ingress {
		48 |     from_port   = 443
		49 |     to_port     = 443
		50 |     protocol    = &quot;tcp&quot;
		51 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		52 |   }
		53 | 
		54 |   ingress {
		55 |   description     = &quot;Traffic from ALB&quot;
		56 |   from_port       = 8080
		57 |   to_port         = 8080
		58 |   protocol        = &quot;tcp&quot;
		59 |   security_groups = [aws_security_group.alb_sg.id]
		60 |   }
		61 | 
		62 |   egress {
		63 |     from_port   = 0
		64 |     to_port     = 0
		65 |     protocol    = &quot;-1&quot;
		66 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		67 |   }
		68 | 
		69 |   tags = {
		70 |     Name = &quot;ec2-security-group&quot;
		71 |   }
		72 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_260] Ensure no security groups allow ingress from 0.0.0.0:0 to port 80" classname="/securitygroup.tf.aws_security_group.alb_sg" file="/securitygroup.tf">
			<failure type="failure" message="Ensure no security groups allow ingress from 0.0.0.0:0 to port 80">
Resource: aws_security_group.alb_sg
File: /securitygroup.tf: 75-98
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80

		75 | resource &quot;aws_security_group&quot; &quot;alb_sg&quot; {
		76 |   name        = &quot;alb-security-group&quot;
		77 |   description = &quot;Security group for ALB&quot;
		78 |   vpc_id      = aws_vpc.main.id
		79 | 
		80 |   ingress {
		81 |     description = &quot;HTTP from anywhere&quot;
		82 |     from_port   = 80
		83 |     to_port     = 80
		84 |     protocol    = &quot;tcp&quot;
		85 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		86 |   }
		87 | 
		88 |   egress {
		89 |     from_port   = 0
		90 |     to_port     = 0
		91 |     protocol    = &quot;-1&quot;
		92 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		93 |   }
		94 | 
		95 |   tags = {
		96 |     Name = &quot;alb-sg&quot;
		97 |   }
		98 | }</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_23] Ensure every security group and rule has a description" classname="/securitygroup.tf.aws_security_group.alb_sg" file="/securitygroup.tf">
			<failure type="failure" message="Ensure every security group and rule has a description">
Resource: aws_security_group.alb_sg
File: /securitygroup.tf: 75-98
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31

		75 | resource &quot;aws_security_group&quot; &quot;alb_sg&quot; {
		76 |   name        = &quot;alb-security-group&quot;
		77 |   description = &quot;Security group for ALB&quot;
		78 |   vpc_id      = aws_vpc.main.id
		79 | 
		80 |   ingress {
		81 |     description = &quot;HTTP from anywhere&quot;
		82 |     from_port   = 80
		83 |     to_port     = 80
		84 |     protocol    = &quot;tcp&quot;
		85 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		86 |   }
		87 | 
		88 |   egress {
		89 |     from_port   = 0
		90 |     to_port     = 0
		91 |     protocol    = &quot;-1&quot;
		92 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		93 |   }
		94 | 
		95 |   tags = {
		96 |     Name = &quot;alb-sg&quot;
		97 |   }
		98 | }</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_382] Ensure no security groups allow egress from 0.0.0.0:0 to port -1" classname="/securitygroup.tf.aws_security_group.alb_sg" file="/securitygroup.tf">
			<failure type="failure" message="Ensure no security groups allow egress from 0.0.0.0:0 to port -1">
Resource: aws_security_group.alb_sg
File: /securitygroup.tf: 75-98
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		75 | resource &quot;aws_security_group&quot; &quot;alb_sg&quot; {
		76 |   name        = &quot;alb-security-group&quot;
		77 |   description = &quot;Security group for ALB&quot;
		78 |   vpc_id      = aws_vpc.main.id
		79 | 
		80 |   ingress {
		81 |     description = &quot;HTTP from anywhere&quot;
		82 |     from_port   = 80
		83 |     to_port     = 80
		84 |     protocol    = &quot;tcp&quot;
		85 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		86 |   }
		87 | 
		88 |   egress {
		89 |     from_port   = 0
		90 |     to_port     = 0
		91 |     protocol    = &quot;-1&quot;
		92 |     cidr_blocks = [&quot;0.0.0.0/0&quot;]
		93 |   }
		94 | 
		95 |   tags = {
		96 |     Name = &quot;alb-sg&quot;
		97 |   }
		98 | }</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_20] Ensure that ALB redirects HTTP requests into HTTPS ones" classname="/alb.tf.aws_lb.app_lb" file="/alb.tf">
			<failure type="failure" message="Ensure that ALB redirects HTTP requests into HTTPS ones">
Resource: aws_lb.app_lb
File: /alb.tf: 2-12
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-alb-redirects-http-requests-into-https-ones

		2  | resource &quot;aws_lb&quot; &quot;app_lb&quot; {
		3  |   name               = &quot;healthy-alb&quot;
		4  |   internal           = false
		5  |   load_balancer_type = &quot;application&quot;
		6  |   security_groups    = [aws_security_group.alb_sg.id]
		7  |   subnets            = [aws_subnet.main_subnet_1.id, aws_subnet.main_subnet_2.id]
		8  | 
		9  |   tags = {
		10 |     Name = &quot;healthy-application-lb&quot;
		11 |   }
		12 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_61] Ensure that an S3 bucket has a lifecycle configuration" classname="/s3.tf.aws_s3_bucket.healthy_app_files" file="/s3.tf">
			<failure type="failure" message="Ensure that an S3 bucket has a lifecycle configuration">
Resource: aws_s3_bucket.healthy_app_files
File: /s3.tf: 1-3
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-61

		1 | resource &quot;aws_s3_bucket&quot; &quot;healthy_app_files&quot; {
		2 |   bucket = var.bucket_name
		3 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_12] Ensure the default security group of every VPC restricts all traffic" classname="/vpc.tf.aws_vpc.main" file="/vpc.tf">
			<failure type="failure" message="Ensure the default security group of every VPC restricts all traffic">
Resource: aws_vpc.main
File: /vpc.tf: 1-5
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-4

		1 | resource &quot;aws_vpc&quot; &quot;main&quot; {
		2 |   cidr_block           = var.vpc_cidr
		3 |   enable_dns_support   = true
		4 |   enable_dns_hostnames = true
		5 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_62] Ensure S3 buckets should have event notifications enabled" classname="/s3.tf.aws_s3_bucket.healthy_app_files" file="/s3.tf">
			<failure type="failure" message="Ensure S3 buckets should have event notifications enabled">
Resource: aws_s3_bucket.healthy_app_files
File: /s3.tf: 1-3
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-62

		1 | resource &quot;aws_s3_bucket&quot; &quot;healthy_app_files&quot; {
		2 |   bucket = var.bucket_name
		3 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_11] Ensure VPC flow logging is enabled in all VPCs" classname="/vpc.tf.aws_vpc.main" file="/vpc.tf">
			<failure type="failure" message="Ensure VPC flow logging is enabled in all VPCs">
Resource: aws_vpc.main
File: /vpc.tf: 1-5
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-9-enable-vpc-flow-logging

		1 | resource &quot;aws_vpc&quot; &quot;main&quot; {
		2 |   cidr_block           = var.vpc_cidr
		3 |   enable_dns_support   = true
		4 |   enable_dns_hostnames = true
		5 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_60] Ensure RDS instance with copy tags to snapshots is enabled" classname="/database.tf.aws_db_instance.healthy" file="/database.tf">
			<failure type="failure" message="Ensure RDS instance with copy tags to snapshots is enabled">
Resource: aws_db_instance.healthy
File: /database.tf: 36-49
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-2-60

		36 | resource &quot;aws_db_instance&quot; &quot;healthy&quot; {
		37 |   identifier             = &quot;healthy-db&quot;
		38 |   allocated_storage      = var.db_allocated_storage
		39 |   engine                 = &quot;postgres&quot;
		40 |   engine_version         = &quot;15.7&quot;
		41 |   instance_class         = var.db_instance_class
		42 |   db_name                = var.db_name
		43 |   username               = var.db_username
		44 |   password               = var.db_password
		45 |   publicly_accessible    = false  # Para que no sea accesible públicamente
		46 |   skip_final_snapshot    = true
		47 |   vpc_security_group_ids = [aws_security_group.rds_sg.id]
		48 |   db_subnet_group_name   = aws_db_subnet_group.main.name
		49 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_18] Ensure the S3 bucket has access logging enabled" classname="/s3.tf.aws_s3_bucket.healthy_app_files" file="/s3.tf">
			<failure type="failure" message="Ensure the S3 bucket has access logging enabled">
Resource: aws_s3_bucket.healthy_app_files
File: /s3.tf: 1-3
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging

		1 | resource &quot;aws_s3_bucket&quot; &quot;healthy_app_files&quot; {
		2 |   bucket = var.bucket_name
		3 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_145] Ensure that S3 buckets are encrypted with KMS by default" classname="/s3.tf.aws_s3_bucket.healthy_app_files" file="/s3.tf">
			<failure type="failure" message="Ensure that S3 buckets are encrypted with KMS by default">
Resource: aws_s3_bucket.healthy_app_files
File: /s3.tf: 1-3
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		1 | resource &quot;aws_s3_bucket&quot; &quot;healthy_app_files&quot; {
		2 |   bucket = var.bucket_name
		3 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_30] Ensure Postgres RDS as aws_db_instance has Query Logging enabled" classname="/database.tf.aws_db_instance.healthy" file="/database.tf">
			<failure type="failure" message="Ensure Postgres RDS as aws_db_instance has Query Logging enabled">
Resource: aws_db_instance.healthy
File: /database.tf: 36-49
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-postgres-rds-has-query-logging-enabled

		36 | resource &quot;aws_db_instance&quot; &quot;healthy&quot; {
		37 |   identifier             = &quot;healthy-db&quot;
		38 |   allocated_storage      = var.db_allocated_storage
		39 |   engine                 = &quot;postgres&quot;
		40 |   engine_version         = &quot;15.7&quot;
		41 |   instance_class         = var.db_instance_class
		42 |   db_name                = var.db_name
		43 |   username               = var.db_username
		44 |   password               = var.db_password
		45 |   publicly_accessible    = false  # Para que no sea accesible públicamente
		46 |   skip_final_snapshot    = true
		47 |   vpc_security_group_ids = [aws_security_group.rds_sg.id]
		48 |   db_subnet_group_name   = aws_db_subnet_group.main.name
		49 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_144] Ensure that S3 bucket has cross-region replication enabled" classname="/s3.tf.aws_s3_bucket.healthy_app_files" file="/s3.tf">
			<failure type="failure" message="Ensure that S3 bucket has cross-region replication enabled">
Resource: aws_s3_bucket.healthy_app_files
File: /s3.tf: 1-3
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled

		1 | resource &quot;aws_s3_bucket&quot; &quot;healthy_app_files&quot; {
		2 |   bucket = var.bucket_name
		3 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_103] Ensure that load balancer is using at least TLS 1.2" classname="/alb.tf.aws_lb_listener.front_end" file="/alb.tf">
			<failure type="failure" message="Ensure that load balancer is using at least TLS 1.2">
Resource: aws_lb_listener.front_end
File: /alb.tf: 35-44
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-43

		35 | resource &quot;aws_lb_listener&quot; &quot;front_end&quot; {
		36 |   load_balancer_arn = aws_lb.app_lb.arn
		37 |   port              = &quot;80&quot;
		38 |   protocol          = &quot;HTTP&quot;
		39 | 
		40 |   default_action {
		41 |     type             = &quot;forward&quot;
		42 |     target_group_arn = aws_lb_target_group.app_tg.arn
		43 |   }
		44 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_378] Ensure AWS Load Balancer doesn't use HTTP protocol" classname="/alb.tf.aws_lb_target_group.app_tg" file="/alb.tf">
			<failure type="failure" message="Ensure AWS Load Balancer doesn't use HTTP protocol">
Resource: aws_lb_target_group.app_tg
File: /alb.tf: 15-32
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-378

		15 | resource &quot;aws_lb_target_group&quot; &quot;app_tg&quot; {
		16 |   name     = &quot;healthy-target-group&quot;
		17 |   port     = 8080
		18 |   protocol = &quot;HTTP&quot;
		19 |   vpc_id   = aws_vpc.main.id
		20 | 
		21 |   health_check {
		22 |     enabled             = true
		23 |     healthy_threshold   = 2
		24 |     interval            = 30
		25 |     matcher            = &quot;200&quot;
		26 |     path               = &quot;/actuator/health&quot;
		27 |     port               = &quot;traffic-port&quot;
		28 |     protocol           = &quot;HTTP&quot;
		29 |     timeout            = 5
		30 |     unhealthy_threshold = 2
		31 |   }
		32 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_21] Ensure all data stored in the S3 bucket have versioning enabled" classname="/s3.tf.aws_s3_bucket.healthy_app_files" file="/s3.tf">
			<failure type="failure" message="Ensure all data stored in the S3 bucket have versioning enabled">
Resource: aws_s3_bucket.healthy_app_files
File: /s3.tf: 1-3
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning

		1 | resource &quot;aws_s3_bucket&quot; &quot;healthy_app_files&quot; {
		2 |   bucket = var.bucket_name
		3 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_6] Ensure that S3 bucket has a Public Access block" classname="/s3.tf.aws_s3_bucket.healthy_app_files" file="/s3.tf">
			<failure type="failure" message="Ensure that S3 bucket has a Public Access block">
Resource: aws_s3_bucket.healthy_app_files
File: /s3.tf: 1-3
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached

		1 | resource &quot;aws_s3_bucket&quot; &quot;healthy_app_files&quot; {
		2 |   bucket = var.bucket_name
		3 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV2_AWS_28] Ensure public facing ALB are protected by WAF" classname="/alb.tf.aws_lb.app_lb" file="/alb.tf">
			<failure type="failure" message="Ensure public facing ALB are protected by WAF">
Resource: aws_lb.app_lb
File: /alb.tf: 2-12
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-public-facing-alb-are-protected-by-waf

		2  | resource &quot;aws_lb&quot; &quot;app_lb&quot; {
		3  |   name               = &quot;healthy-alb&quot;
		4  |   internal           = false
		5  |   load_balancer_type = &quot;application&quot;
		6  |   security_groups    = [aws_security_group.alb_sg.id]
		7  |   subnets            = [aws_subnet.main_subnet_1.id, aws_subnet.main_subnet_2.id]
		8  | 
		9  |   tags = {
		10 |     Name = &quot;healthy-application-lb&quot;
		11 |   }
		12 | }
</failure>
		</testcase>
	</testsuite>
</testsuites>
